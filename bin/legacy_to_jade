#!/usr/bin/env node

var html2jade = require('html2jade')
  , request   = require('request')
  , cheerio   = require('cheerio')
  , uuid      = require('uuid')
  , async     = require('async')

request('http://sequelizejs.com/documentation', function (err, res, body) {
  var $         = cheerio.load(body)
    , $sections = $('section')
    , html      = {}
    , jades     = {}
    , codes     = {}

  $sections.each(function() {
    $(this).find('pre > code').each(function() {
      var text = $(this).text().split('\n')
        , id   = uuid.v4()

      text = text.map(function(line) {
        if (line.trim() === '') {
          line = "&nbsp;"
        }
        return line
      })

      codes[id] = text.join('\n')

      $(this).parent().attr('id', id).html('')
    })

    html[$(this).attr('id')] = $(this).html().trim()
  })

  async.map(Object.keys(html), function(sectionName, callback) {
    html2jade.convertHtml(html[sectionName], {}, function (err, jade) {
      var lines = jade.split('\n')

      jade = lines.map(function(line) {
        var match = line.match(/(\s*)(\w+)#(\w+-\w+-\w+-\w+-\w+)/)

        if (match) {
          var code = codes[match[3]]

          code = (code || "").split('\n').map(function(line) {
            return match[1] + "    | " + line
          })

          return [
            match[1] + match[2] + ".dark-blue",
            match[1] + "  code.javascript"
          ].concat(code).join('\n')
        } else {
          return line
        }
      }).join('\n')

      callback(null, jade)
    })
  }, function(errors, result) {
    console.log(result[0])
  })
})
